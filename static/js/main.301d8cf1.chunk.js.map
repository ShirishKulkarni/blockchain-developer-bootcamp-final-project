{"version":3,"sources":["components/componentButton.tsx","functions/injectedConnectors.ts","components/componentHeader.tsx","functions/contextContainer.ts","functions/formatListings.ts","functions/bookListingTransition.ts","config.js","components/componentListing.tsx","functions/createListingTransition.ts","components/componentInput.tsx","components/componentModal.tsx","components/componentCreateListingModal.tsx","components/componentListingCard.tsx","functions/deleteListingTransition.ts","functions/updateListingTransition.ts","functions/setApproveTransition.ts","components/componentManageListingModal.tsx","components/componentImageGrid.tsx","functions/startPollTransition.ts","components/componentListings.tsx","functions/voteTransition.ts","components/componentPollCard.tsx","functions/pollImagesTransition.ts","functions/endPollingTransition.ts","functions/getWinnersTransition.ts","components/componentPoll.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Button","props","text","red","modal","onClick","padding","alert","header","green","colours","auction","className","injected","InjectedConnector","supportedChainIds","Header","useState","undefined","useWeb3React","active","account","activate","a","console","log","ContextContainer","createContainer","setAccount","contract","setContract","formatListings","monumentContract","pollFactoryContract","web3","nftPollAbi","library","contractResponse","Array","nftPollArray","eth","getAccounts","accounts","methods","getTokenMetaList","call","from","err","res","forEach","element","uri","push","id","tokenId","image","isPoll","isActive","getAllOngoingPolls","address","addr","contractAddress","pollContract","Contract","isVotingComplete","bookListingTransition","amount","buy","send","value","NFTCOSMOS_ADDRESS","NFTPOLLFACTORY_ADDRESS","NFTCOSMOS_ABI","NFTPOLLFACTORY_ABI","NFTPOLL_ABI","Listing","listing","setListing","setWeb3","useParams","history","useHistory","useContainer","useEffect","web3Ref","Web3","then","values","filter","src","price","createListingTransition","royaltyType","royaltyValue","safeMint","toast","error","success","Input","name","unit","setValue","type","placeHolder","disabled","placeholder","inputMode","min","onChange","e","target","Modal","title","children","setVisible","visible","buttonText","document","onkeydown","event","key","preventDefault","style","opacity","visibility","transform","stopPropagation","fill","stroke","viewBox","xmlns","strokeLinecap","strokeLinejoin","strokeWidth","d","CreateListingModal","showCreateListing","setShowCreateListing","setImage","setRoyaltyType","setRoyaltyValue","setPriceValue","ListingCard","rooms","bathrooms","rented","royalty_type","backgroundImage","backgroundSize","deleteListingTransition","burn","updateListingTransition","parseInt","toString","setApproveTransition","buyerAddress","approve","ManageListingModal","showManageListing","setShowManageListing","modalListing","accumulated_rent","setPrice","setBuyerAddress","deleteListing","ImageGrid","startPollTransition","ids","addresses","images","createNewPoll","on","hash","window","location","href","message","Listings","setModalListing","listings","setListings","polls","nonPolls","skyScraperContract","length","map","index","voteTransition","pollImagesContract","vote","PollCard","tokenAddress","voteCount","pollImagesTransition","getAllItemsInPoll","nftAddr","endPollingTransition","methodCallback","endPolling","events","Winners","returnValues","winners","getWinnersTransition","pollWinners","Poll","responseCallBack","response","App","ethereum","path","exact","to","toastOptions","duration","loading","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getLibrary","provider","Provider","getElementById"],"mappings":"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","file":"static/js/main.301d8cf1.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\ntype props = {\r\n    text: string;\r\n    onClick(e: any): void;\r\n    red?: boolean;\r\n    header?: boolean;\r\n    modal?: boolean;\r\n    padding?: boolean;\r\n    alert?: boolean;\r\n    green?: boolean;\r\n    auction?: boolean;\r\n};\r\n\r\nconst Button: React.FC<props> = (props) => {\r\n    const {\r\n        text,\r\n        red = false,\r\n        modal = false,\r\n        onClick,\r\n        padding = false,\r\n        alert = false,\r\n        header = false,\r\n        green = false,\r\n        auction = false\r\n    } = props;\r\n    const colours = red\r\n        ? \"text-red-900 bg-white\"\r\n        : alert\r\n        ? \"text-white bg-red-600\"\r\n        : green\r\n        ? \"text-white bg-green-600\"\r\n        : auction\r\n        ? \"text-white bg-red-600\"\r\n        : \"text-white bg-red-600\";\r\n\r\n    return (\r\n        <button\r\n            className={`font-medium  text-sm lg:text-base rounded-button shadow-button cursor-pointer ${colours} ${\r\n                modal ? \"w-full lg:text-base\" : \"px-3 lg:px-6\" \r\n            } \r\n            ${padding ? \"mb-10\" : \"\"}\r\n            ${header ? \"py-1\" : \"py-3\"}\r\n            `}\r\n            {...{ onClick }}\r\n        >\r\n            {text}\r\n        </button>\r\n    );\r\n};\r\n\r\nexport default Button;\r\n","import { InjectedConnector } from '@web3-react/injected-connector'\nexport const injected = new InjectedConnector({\n  supportedChainIds: [3, 1337],\n})","import React, { useEffect, useState } from \"react\";\r\nimport Button from \"./componentButton\";\r\nimport { useWeb3React } from \"@web3-react/core\"\r\nimport { injected } from \"../functions/injectedConnectors\";\r\n\r\n\r\n\r\nconst Header: React.FC = () => {\r\n    const [searchString, setSearchString] = useState<string | undefined>(undefined);\r\n\r\n    const { active, account, activate } = useWeb3React();\r\n\r\n    async function connectToWallet() {\r\n        try {\r\n            await activate(injected);\r\n        } catch (ex) {\r\n            console.log(ex)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <header className=\"bg-red-700 sticky top-0 z-10 h-15\">\r\n            <div className=\"container mx-auto px-4 lg:px-2 py-3 flex justify-between items-center\">\r\n            <span\r\n                    className=\"text-2xl font-bold cursor-pointer text-white\"\r\n                >\r\n                    <b>\r\n                Most Popular NFT\r\n                </b>\r\n            </span> \r\n                {active ?\r\n                    (<b className=\"text-white font-small font-bolder text-sm\">\r\n                        {account}\r\n                    </b>)\r\n                    :\r\n                    (\r\n                        <Button \r\n                        text={\"Wallet\"}\r\n                        onClick={connectToWallet}\r\n                        header\r\n                        red\r\n                        />)}\r\n            </div>\r\n        </header>\r\n    );\r\n};\r\n\r\nexport default Header;\r\n","import { useState } from \"react\";\r\nimport { createContainer } from \"unstated-next\";\r\n\r\nconst useContext = () => {\r\n   \r\n    const [account, setAccount] = useState<any | undefined>(undefined);\r\n    const [contract, setContract] = useState<any | undefined>(undefined);\r\n\r\n\r\n    return {\r\n        account,\r\n        setAccount,\r\n        contract,\r\n        setContract\r\n    };\r\n};\r\nconst ContextContainer = createContainer(useContext);\r\nexport default ContextContainer;\r\n","import Web3 from 'web3'\n\nconst formatListings = async (\n    monumentContract: any,\n    pollFactoryContract: any,\n    account: any,\n    web3: any,\n    nftPollAbi: any,\n    library: any,\n) => {\n    let contractResponse = new Array();\n    let nftPollArray = new Array();\n    const accounts = await web3.eth.getAccounts();\n    await monumentContract.methods.getTokenMetaList().call({ from: accounts[0] }, function (err: any, res: any) {\n        if (err) {\n            console.log(\"An error occured\", err)\n            return\n        }\n        res.forEach((element: any) => {\n            console.log(element);\n            if (element.uri) {\n                contractResponse.push({\n                    id: element.tokenId,\n                    image: element.uri,\n                    isPoll: false,\n                    isActive: false,\n                })\n            }\n        });\n    })\n    await pollFactoryContract.methods.getAllOngoingPolls().call({ from: accounts[0] }, function (err: any, res: any) {\n        if (err) {\n            console.log(\"An error occured\", err)\n            return\n        }\n        res.forEach((element: any) => {\n            nftPollArray.push({address:element});\n        });\n\n\n            //             contractResponse.push({\n            //                 id: element,\n            //                 isPoll: true,\n            //                 image:\"https://news.miami.edu/_assets/images-stories/2020/09/voterpolling-hero-940x529.jpg\"\n            //             });\n            //         });\n\n\n        });\n      \n         for(let addr in nftPollArray){\n            const contractAddress = nftPollArray[addr].address;\n            let pollContract = new library.eth.Contract(nftPollAbi as any, contractAddress as any, account);\n            await pollContract.methods.isVotingComplete().call((err:any, res:any) => {\n                contractResponse.push({\n                    id: contractAddress,\n                    isPoll: true,\n                    image:\"https://news.miami.edu/_assets/images-stories/2020/09/voterpolling-hero-940x529.jpg\",\n                    isActive: !res,\n                    });\n\n            });\n\n         }   \n\n    return contractResponse;\n\n\n}\n\nexport default formatListings;\n","import toast from \"react-hot-toast\";\r\nimport { decodeZilPayError } from \"./decodeMessage\";\r\nimport getCallParameters from \"./getCallParameters\";\r\nimport transitionMessageAlert from \"./transitionMessageAlert\";\r\nimport getCurrentUser from \"../functions/getCurretUser\";\r\n\r\n/* Calls book_listing transition */\r\n\r\nconst bookListingTransition = async (\r\n    contract: any,\r\n    web3: any,\r\n    id: string,\r\n    amount: number\r\n) => {\r\n    try {\r\n        const accounts = await web3.eth.getAccounts();\r\n        contract.methods.buy(id).send({from:accounts[0], value:5000000000000000}, function (err:any, res:any) {\r\n            if (err) {\r\n              console.log(\"An error occured\", err)\r\n              return\r\n            }\r\n            console.log(res);\r\n          });\r\n        \r\n        \r\n        //transitionMessageAlert(zilPay, callTransition.ID, \"Purchasing\");\r\n    } catch (error) {\r\n        //toast.error(decodeZilPayError(error));\r\n    }\r\n};\r\n\r\nexport default bookListingTransition;\r\n","export const NFTCOSMOS_ADDRESS = '0x0E61f1530C73cb2d326c9B0D089731FBCaE8c2fF'\n\nexport const NFTPOLLFACTORY_ADDRESS = '0x2E5B4B2deca61D028aC7e5359fB73c6DeeF67eF6'\n\nexport const NFTCOSMOS_ABI = [\n\t{\n\t\t\"inputs\": [],\n\t\t\"stateMutability\": \"nonpayable\",\n\t\t\"type\": \"constructor\"\n\t},\n\t{\n\t\t\"anonymous\": false,\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"indexed\": true,\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"owner\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"indexed\": true,\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"approved\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"indexed\": true,\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"tokenId\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"Approval\",\n\t\t\"type\": \"event\"\n\t},\n\t{\n\t\t\"anonymous\": false,\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"indexed\": true,\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"owner\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"indexed\": true,\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"operator\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"indexed\": false,\n\t\t\t\t\"internalType\": \"bool\",\n\t\t\t\t\"name\": \"approved\",\n\t\t\t\t\"type\": \"bool\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"ApprovalForAll\",\n\t\t\"type\": \"event\"\n\t},\n\t{\n\t\t\"anonymous\": false,\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"indexed\": true,\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"previousOwner\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"indexed\": true,\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"newOwner\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"OwnershipTransferred\",\n\t\t\"type\": \"event\"\n\t},\n\t{\n\t\t\"anonymous\": false,\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"indexed\": false,\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"account\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"Paused\",\n\t\t\"type\": \"event\"\n\t},\n\t{\n\t\t\"anonymous\": false,\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"indexed\": true,\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"from\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"indexed\": true,\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"to\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"indexed\": true,\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"tokenId\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"Transfer\",\n\t\t\"type\": \"event\"\n\t},\n\t{\n\t\t\"anonymous\": false,\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"indexed\": false,\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"account\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"Unpaused\",\n\t\t\"type\": \"event\"\n\t},\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"to\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"tokenId\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"approve\",\n\t\t\"outputs\": [],\n\t\t\"stateMutability\": \"nonpayable\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"owner\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"balanceOf\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"tokenId\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"burn\",\n\t\t\"outputs\": [],\n\t\t\"stateMutability\": \"nonpayable\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"tokenId\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"getApproved\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [],\n\t\t\"name\": \"getTokenMetaList\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"components\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\t\t\"name\": \"tokenId\",\n\t\t\t\t\t\t\"type\": \"uint256\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"internalType\": \"string\",\n\t\t\t\t\t\t\"name\": \"uri\",\n\t\t\t\t\t\t\"type\": \"string\"\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t\"internalType\": \"struct NationalMonumentNFT.NFTMeta[]\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"tuple[]\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"owner\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"operator\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"isApprovedForAll\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"bool\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"bool\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [],\n\t\t\"name\": \"name\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"string\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"string\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [],\n\t\t\"name\": \"owner\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"tokenId\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"ownerOf\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [],\n\t\t\"name\": \"pause\",\n\t\t\"outputs\": [],\n\t\t\"stateMutability\": \"nonpayable\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [],\n\t\t\"name\": \"paused\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"bool\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"bool\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [],\n\t\t\"name\": \"renounceOwnership\",\n\t\t\"outputs\": [],\n\t\t\"stateMutability\": \"nonpayable\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"to\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"internalType\": \"string\",\n\t\t\t\t\"name\": \"uri\",\n\t\t\t\t\"type\": \"string\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"safeMint\",\n\t\t\"outputs\": [],\n\t\t\"stateMutability\": \"nonpayable\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"from\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"to\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"tokenId\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"safeTransferFrom\",\n\t\t\"outputs\": [],\n\t\t\"stateMutability\": \"nonpayable\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"from\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"to\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"tokenId\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"internalType\": \"bytes\",\n\t\t\t\t\"name\": \"_data\",\n\t\t\t\t\"type\": \"bytes\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"safeTransferFrom\",\n\t\t\"outputs\": [],\n\t\t\"stateMutability\": \"nonpayable\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"operator\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"internalType\": \"bool\",\n\t\t\t\t\"name\": \"approved\",\n\t\t\t\t\"type\": \"bool\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"setApprovalForAll\",\n\t\t\"outputs\": [],\n\t\t\"stateMutability\": \"nonpayable\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"bytes4\",\n\t\t\t\t\"name\": \"interfaceId\",\n\t\t\t\t\"type\": \"bytes4\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"supportsInterface\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"bool\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"bool\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [],\n\t\t\"name\": \"symbol\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"string\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"string\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"index\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"tokenByIndex\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"owner\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"index\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"tokenOfOwnerByIndex\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"tokenId\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"tokenURI\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"string\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"string\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"tokenId\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"tokenURI2\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"string\",\n\t\t\t\t\"name\": \"uri\",\n\t\t\t\t\"type\": \"string\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"addr\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [],\n\t\t\"name\": \"totalSupply\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"from\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"to\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"tokenId\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"transferFrom\",\n\t\t\"outputs\": [],\n\t\t\"stateMutability\": \"nonpayable\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"newOwner\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"transferOwnership\",\n\t\t\"outputs\": [],\n\t\t\"stateMutability\": \"nonpayable\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [],\n\t\t\"name\": \"unpause\",\n\t\t\"outputs\": [],\n\t\t\"stateMutability\": \"nonpayable\",\n\t\t\"type\": \"function\"\n\t}\n];\n\nexport const NFTPOLLFACTORY_ABI = [\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"_days\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256[]\",\n\t\t\t\t\"name\": \"ids\",\n\t\t\t\t\"type\": \"uint256[]\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"internalType\": \"address[]\",\n\t\t\t\t\"name\": \"addresses\",\n\t\t\t\t\"type\": \"address[]\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"internalType\": \"string[]\",\n\t\t\t\t\"name\": \"uris\",\n\t\t\t\t\"type\": \"string[]\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"createNewPoll\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"newContract\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"nonpayable\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [],\n\t\t\"name\": \"getAllOngoingPolls\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"address[]\",\n\t\t\t\t\"name\": \"polls\",\n\t\t\t\t\"type\": \"address[]\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"id\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"getPollAddress\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"pollContractAddress\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"nftPolls\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t}\n];\n\nexport const NFTPOLL_ABI =[\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"_days\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256[]\",\n\t\t\t\t\"name\": \"ids\",\n\t\t\t\t\"type\": \"uint256[]\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"internalType\": \"address[]\",\n\t\t\t\t\"name\": \"addresses\",\n\t\t\t\t\"type\": \"address[]\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"internalType\": \"string[]\",\n\t\t\t\t\"name\": \"uris\",\n\t\t\t\t\"type\": \"string[]\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"nonpayable\",\n\t\t\"type\": \"constructor\"\n\t},\n\t{\n\t\t\"anonymous\": false,\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"indexed\": false,\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"_tokenId\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"indexed\": false,\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"_winner_addr\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"indexed\": false,\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"_total_votes\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"PollWinner\",\n\t\t\"type\": \"event\"\n\t},\n\t{\n\t\t\"anonymous\": false,\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"indexed\": false,\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"_contestant_addr\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"indexed\": false,\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"_tokenId\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"RegisterItemForPoll\",\n\t\t\"type\": \"event\"\n\t},\n\t{\n\t\t\"anonymous\": false,\n\t\t\"inputs\": [],\n\t\t\"name\": \"RegistrationForPollCompleted\",\n\t\t\"type\": \"event\"\n\t},\n\t{\n\t\t\"anonymous\": false,\n\t\t\"inputs\": [],\n\t\t\"name\": \"RegistrationForPollStarted\",\n\t\t\"type\": \"event\"\n\t},\n\t{\n\t\t\"anonymous\": false,\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"indexed\": false,\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"_voter\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"indexed\": false,\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"_tokenId\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"Vote\",\n\t\t\"type\": \"event\"\n\t},\n\t{\n\t\t\"anonymous\": false,\n\t\t\"inputs\": [],\n\t\t\"name\": \"VotingCompleted\",\n\t\t\"type\": \"event\"\n\t},\n\t{\n\t\t\"anonymous\": false,\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"indexed\": false,\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"_voter\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"indexed\": false,\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"_tokenId\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"indexed\": false,\n\t\t\t\t\"internalType\": \"string\",\n\t\t\t\t\"name\": \"_message\",\n\t\t\t\t\"type\": \"string\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"VotingFailed\",\n\t\t\"type\": \"event\"\n\t},\n\t{\n\t\t\"anonymous\": false,\n\t\t\"inputs\": [],\n\t\t\"name\": \"VotingStarted\",\n\t\t\"type\": \"event\"\n\t},\n\t{\n\t\t\"anonymous\": false,\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"components\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\t\t\"name\": \"nftAddr\",\n\t\t\t\t\t\t\"type\": \"address\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\t\t\"name\": \"tokenId\",\n\t\t\t\t\t\t\"type\": \"uint256\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\t\t\"name\": \"voteCount\",\n\t\t\t\t\t\t\"type\": \"uint256\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"internalType\": \"string\",\n\t\t\t\t\t\t\"name\": \"uri\",\n\t\t\t\t\t\t\"type\": \"string\"\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t\"indexed\": false,\n\t\t\t\t\"internalType\": \"struct NFTPOLL.Item[]\",\n\t\t\t\t\"name\": \"winners\",\n\t\t\t\t\"type\": \"tuple[]\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"Winners\",\n\t\t\"type\": \"event\"\n\t},\n\t{\n\t\t\"inputs\": [],\n\t\t\"name\": \"endPolling\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"components\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\t\t\"name\": \"nftAddr\",\n\t\t\t\t\t\t\"type\": \"address\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\t\t\"name\": \"tokenId\",\n\t\t\t\t\t\t\"type\": \"uint256\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\t\t\"name\": \"voteCount\",\n\t\t\t\t\t\t\"type\": \"uint256\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"internalType\": \"string\",\n\t\t\t\t\t\t\"name\": \"uri\",\n\t\t\t\t\t\t\"type\": \"string\"\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t\"internalType\": \"struct NFTPOLL.Item[]\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"tuple[]\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"nonpayable\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [],\n\t\t\"name\": \"getAllItemsInPoll\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"components\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\t\t\"name\": \"nftAddr\",\n\t\t\t\t\t\t\"type\": \"address\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\t\t\"name\": \"tokenId\",\n\t\t\t\t\t\t\"type\": \"uint256\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\t\t\"name\": \"voteCount\",\n\t\t\t\t\t\t\"type\": \"uint256\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"internalType\": \"string\",\n\t\t\t\t\t\t\"name\": \"uri\",\n\t\t\t\t\t\t\"type\": \"string\"\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t\"internalType\": \"struct NFTPOLL.Item[]\",\n\t\t\t\t\"name\": \"items\",\n\t\t\t\t\"type\": \"tuple[]\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [],\n\t\t\"name\": \"getPollResults\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"components\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\t\t\"name\": \"nftAddr\",\n\t\t\t\t\t\t\"type\": \"address\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\t\t\"name\": \"tokenId\",\n\t\t\t\t\t\t\"type\": \"uint256\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\t\t\"name\": \"voteCount\",\n\t\t\t\t\t\t\"type\": \"uint256\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"internalType\": \"string\",\n\t\t\t\t\t\t\"name\": \"uri\",\n\t\t\t\t\t\t\"type\": \"string\"\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t\"internalType\": \"struct NFTPOLL.Item[]\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"tuple[]\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"nonpayable\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [],\n\t\t\"name\": \"isRegistrationComplete\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"bool\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"bool\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [],\n\t\t\"name\": \"isVotingComplete\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"bool\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"bool\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [],\n\t\t\"name\": \"isVotingStarted\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"bool\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"bool\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [],\n\t\t\"name\": \"pollWinners\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"components\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\t\t\"name\": \"nftAddr\",\n\t\t\t\t\t\t\"type\": \"address\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\t\t\"name\": \"tokenId\",\n\t\t\t\t\t\t\"type\": \"uint256\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\t\t\"name\": \"voteCount\",\n\t\t\t\t\t\t\"type\": \"uint256\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"internalType\": \"string\",\n\t\t\t\t\t\t\"name\": \"uri\",\n\t\t\t\t\t\t\"type\": \"string\"\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t\"internalType\": \"struct NFTPOLL.Item[]\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"tuple[]\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"nft_addr\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"_tokenId\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"internalType\": \"string\",\n\t\t\t\t\"name\": \"_uri\",\n\t\t\t\t\"type\": \"string\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"registerItemForPoll\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"bool\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"bool\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"nonpayable\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"tokensInPoll\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"nftAddr\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"tokenId\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"voteCount\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"internalType\": \"string\",\n\t\t\t\t\"name\": \"uri\",\n\t\t\t\t\"type\": \"string\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"_nft_addr\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"_tokenId\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"vote\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"bool\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"bool\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"nonpayable\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"votedAddresses\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"bool\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"bool\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [],\n\t\t\"name\": \"votingEndBlockTimeStamp\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"winners\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"nftAddr\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"tokenId\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"voteCount\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"internalType\": \"string\",\n\t\t\t\t\"name\": \"uri\",\n\t\t\t\t\"type\": \"string\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t}\n];","import React, { useEffect, useState } from \"react\";\nimport ContextContainer from \"../functions/contextContainer\";\nimport formatListings from \"../functions/formatListings\";\nimport getCurrentEpochNumber from \"../functions/getCurrentEpochNumber\";\nimport getCurrentUser from \"../functions/getCurretUser\";\nimport Button from \"./componentButton\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport bookListingTransition from \"../functions/bookListingTransition\";\nimport Input from \"./componentInput\";\nimport { useWeb3React } from \"@web3-react/core\"\nimport { NFTCOSMOS_ABI, NFTCOSMOS_ADDRESS } from \"../config\";\nimport Web3 from 'web3'\nimport { NFTPOLL_ABI } from \"../config\";\n\n\n/*\nListing Component\n\nThis component presents a detailed view of the individual listings.\nThe description, rooms, amenities, map, etc are presented in a detailed manner.\nUsers can book the listing withing this component, which uses the makeReservation function.\nThe map embed url is built using the Google Plus Code and the Google Maps API Key.\n*/\n\nconst Listing: React.FC = () => {\n    const [listing, setListing] = useState<any | undefined>(undefined);\n    const [web3, setWeb3] = useState<any | undefined>(undefined);\n    const { id } = useParams<{ id: string }>();\n    const history = useHistory();\n    const { contract } = ContextContainer.useContainer();\n    let {\n        library,\n        active,\n        account } = useWeb3React();\n\n\n    useEffect(() => {\n        if(!active)return;\n        (async () => {\n            const web3Ref = new Web3(library);\n            setWeb3(web3Ref);\n            let contract = new library.eth.Contract(NFTCOSMOS_ABI as any, NFTCOSMOS_ADDRESS, account);\n\n            formatListings(contract,null, account, web3Ref, NFTPOLL_ABI, library).then((values) => {\n                const listing = values.filter((listing) => {\n                    return listing.id === id;\n                })?.[0];\n                if (!listing) history.push(\"/listings\");\n                setListing(listing);\n\n            });  \n        })();\n    }, [active]);\n\n    const buyItem = () => {\n        const web3Ref = new Web3(library);\n        let contract = new library.eth.Contract(NFTCOSMOS_ABI as any, NFTCOSMOS_ADDRESS, account);\n         bookListingTransition(contract, web3Ref, listing.id, listing.price);\n    };\n\n    return (\n        \n        <>\n            {listing ? (\n                <div className=\"container mx-auto px-4 lg:px-2 pb-20\">\n                    <div className=\"pt-20 pb-10\">\n                        <h1 className=\"text-gray-900 text-3xl font-medium\">\n                        </h1>\n                    </div>\n                    <div className=\"grid lg:grid-cols-3 gap-12 relative\">\n                        <div className=\"order-2 lg:order-none lg:col-span-2\">\n                            <img\n                                className=\"rounded-xl bg-gray-100\"\n                                src={listing.image}\n                            />\n                        </div>\n\n                        <div className=\"order-1\">\n                        <div className=\"text-center\">\n                                    <p className=\"mt-4 mb-8 text-xl text-red-600 font-medium\">\n                                        {listing.price} ETH\n                                    </p>\n                                </div>\n                            <div className=\"sticky top-32 p-6 rounded-xl border-2 w-full\">\n                                <Button\n                                    modal\n                                    onClick={buyItem}\n                                    text=\"Purchase\"\n                                />\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            ) : active ? (\n                <p className=\"pt-20 text-xl text-center\">Loading</p>\n            ) : (\n                <p className=\"pt-20 text-xl text-center\">\n                    Please connect ZilPay\n                </p>\n            )}\n        </>\n    );\n};\n\nexport default Listing;\n","import getCallParameters from \"./getCallParameters\";\r\nimport toast from \"react-hot-toast\";\r\nimport transitionMessageAlert from \"./transitionMessageAlert\";\r\nimport { decodeZilPayError } from \"./decodeMessage\";\r\nimport getCurrentUser from \"../functions/getCurretUser\";\r\nimport Web3 from \"web3\";\r\n\r\n/* Calls create_listing transition */\r\n\r\nconst createListingTransition = async (\r\n  contract: any,\r\n  image: string | undefined,\r\n  royaltyType: string,\r\n  royaltyValue: string,\r\n  price: string,\r\n  account: any,\r\n  web3: any\r\n) => {\r\n  let accounts = await web3.eth.getAccounts();\r\n  await contract.methods.safeMint(\r\n    accounts[0],\r\n    image as any\r\n  ).send({ from: accounts[0] }, function (err: any, res: any) {\r\n    if (err) {\r\n      console.log(\"An error occured\", err)\r\n      toast.error(\"Create Listing Failed!\")\r\n      return\r\n    }\r\n    console.log(res);\r\n    toast.success(\"Create Listing Submitted!\")\r\n  });\r\n};\r\n\r\nexport default createListingTransition;\r\n","import React from \"react\";\r\n\r\ntype props = {\r\n    name: string;\r\n    unit?: string;\r\n    value?: string;\r\n    setValue(value: string): void;\r\n    type?: string;\r\n    placeHolder?: string;\r\n    disabled?: boolean;\r\n};\r\n\r\nconst Input: React.FC<props> = (props) => {\r\n    const { name, unit = \"\", value = \"\", setValue, type = \"text\", placeHolder , disabled} = props;\r\n\r\n    return (\r\n        <div className=\"\">\r\n            <div className=\"flex justify-between items-center py-2 text-xs tracking-wide uppercase\">\r\n                <h4 className=\"font-semibold text-gray-500\">{name}</h4>\r\n                <p className=\"font-medium text-gray-400\">{unit}</p>\r\n            </div>\r\n            <input\r\n                className=\"w-full h-10 mb-6 border-2 border-gray-300 focus:border-gray-900 rounded-button outline-none text-gray-900 lg:text-lg px-4 py-3\"\r\n                placeholder={placeHolder ? placeHolder : name}\r\n                type={\"text\"}\r\n                inputMode={type === \"number\" ? \"decimal\" : \"text\"}\r\n                min={type === \"number\" ? 1 : undefined}\r\n                value={value}\r\n                onChange={(e) => setValue(e.target.value)}\r\n                disabled = {disabled ? true : false}\r\n            ></input>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Input;\r\n","import React, { useEffect } from \"react\";\r\nimport Button from \"./componentButton\";\r\n\r\n/*\r\nModal Component\r\nMost transitions take place via a modal.\r\nThis component takes care of the basic Modal functionality.\r\nThe title, button, dismiss button, overlay, are part of this component.\r\nThe children passed to this component are the content in the modal.\r\nThe onClick function will be called when the main button is clicked.\r\n*/\r\n\r\ntype props = {\r\n    title: string;\r\n    children: JSX.Element | JSX.Element[];\r\n    setVisible(visible: boolean): void;\r\n    visible: boolean;\r\n    buttonText: string;\r\n    onClick(): void;\r\n};\r\n\r\nconst Modal: React.FC<props> = (props) => {\r\n    const { title, children, setVisible, visible, buttonText, onClick } = props;\r\n\r\n    useEffect(() => {\r\n        document.onkeydown = (event: KeyboardEvent) => {\r\n            if (event.key === \"Enter\") {\r\n                event.preventDefault();\r\n                onClick();\r\n            }\r\n        };\r\n    }, []);\r\n\r\n    return (\r\n        <div\r\n            className={\r\n                \"w-screen h-screen bg-black bg-opacity-25 fixed top-0 left-0 z-20 transition-all\"\r\n            }\r\n            style={\r\n                visible\r\n                    ? {\r\n                          opacity: 1,\r\n                          visibility: \"visible\",\r\n                          transform: \"translateY(0)\",\r\n                      }\r\n                    : {\r\n                          opacity: 0,\r\n                          visibility: \"hidden\",\r\n                          transform: \"translateY(30px)\",\r\n                      }\r\n            }\r\n            onClick={() => setVisible(false)}\r\n        >\r\n            <div className=\"w-full h-full flex justify-center items-center px-4 lg:px-2 py-2\">\r\n                <div\r\n                    className=\"w-full lg:w-1/3 bg-white shadow-xl rounded-2xl max-h-full flex flex-col\"\r\n                    onClick={(e) => e.stopPropagation()}\r\n                >\r\n                    <div className=\"flex justify-between items-center p-8\">\r\n                        <p className=\"text-xl font-bold text-gray-900\">\r\n                            {title}\r\n                        </p>\r\n                        <button\r\n                            className=\"p-1 rounded hover:bg-gray-100 transition-colors -mr-1\"\r\n                            onClick={() => setVisible(false)}\r\n                        >\r\n                            <svg\r\n                                className=\"w-6 h-6 text-gray-700\"\r\n                                fill=\"none\"\r\n                                stroke=\"currentColor\"\r\n                                viewBox=\"0 0 24 24\"\r\n                                xmlns=\"http://www.w3.org/2000/svg\"\r\n                            >\r\n                                <path\r\n                                    strokeLinecap=\"round\"\r\n                                    strokeLinejoin=\"round\"\r\n                                    strokeWidth={2}\r\n                                    d=\"M6 18L18 6M6 6l12 12\"\r\n                                />\r\n                            </svg>\r\n                        </button>\r\n                    </div>\r\n\r\n                    <div className=\"w-full px-8 pt-0 overflow-y-scroll flex-grow\">\r\n                        {children}\r\n                    </div>\r\n                    <div className=\"p-8\">\r\n                        <Button\r\n                            modal\r\n                            text={buttonText}\r\n                            onClick={(e: any) => {\r\n                                onClick();\r\n                                setVisible(false);\r\n                            }}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Modal;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport ContextContainer from \"../functions/contextContainer\";\r\nimport createListingTransition from \"../functions/createListingTransition\";\r\nimport Input from \"./componentInput\";\r\nimport Modal from \"./componentModal\";\r\nimport Tick from \"./componentTick\";\r\nimport { useWeb3React } from \"@web3-react/core\"\r\nimport { NFTCOSMOS_ABI, NFTCOSMOS_ADDRESS } from \"../config\";\r\nimport Web3 from 'web3'\r\n\r\ntype props = {\r\n    showCreateListing: boolean;\r\n    setShowCreateListing(visible: boolean): void;\r\n};\r\n\r\nconst CreateListingModal: React.FC<props> = (props) => {\r\n    const { showCreateListing, setShowCreateListing } = props;\r\n    const [image, setImage] = useState<string | undefined>(undefined);\r\n    const [royaltyType, setRoyaltyType] = useState<string>(\"1\");\r\n    const [royaltyValue, setRoyaltyValue] = useState<string>(\"0\");\r\n    const [price, setPriceValue] = useState<string>(\"0\");\r\n    let { library, active, account } = useWeb3React();\r\n\r\n    const createListing = () => {\r\n        if (\r\n            !image\r\n        )\r\n            return;\r\n        const web3 = new Web3(library);\r\n        let contract = new library.eth.Contract(NFTCOSMOS_ABI as any, NFTCOSMOS_ADDRESS);\r\n        createListingTransition(\r\n            contract,\r\n            image,\r\n            royaltyType,\r\n            royaltyValue,\r\n            price,\r\n            account,\r\n            web3,\r\n        );\r\n    };\r\n\r\n    useEffect(() => {\r\n        setImage(undefined);\r\n        setRoyaltyType(\"1\");\r\n        setRoyaltyValue(\"0\");\r\n        setPriceValue(\"0\");\r\n    }, [showCreateListing]);\r\n\r\n    return (\r\n        <Modal\r\n            title=\"Post your Creation\"\r\n            visible={showCreateListing}\r\n            setVisible={setShowCreateListing}\r\n            buttonText={\"Post!\"}\r\n            onClick={createListing}\r\n        >\r\n            <Input\r\n                name=\"Image URL\"\r\n                value={image}\r\n                type=\"text\"\r\n                setValue={setImage}\r\n            />\r\n\r\n        </Modal>\r\n    );\r\n};\r\n\r\nexport default CreateListingModal;\r\n","import React from \"react\";\n\n/*\nListingCard Component\n\nThis component creates the listing card used on the listings page.\n*/\n\ntype props = {\n    id: string;\n    name: string;\n    price: string | number;\n    rooms: string | number;\n    bathrooms: string | number;\n    image: string;\n    renter: string | undefined;\n    rented_till: string;\n    accumulated_rent: string;\n    rented: boolean;\n    user_is_host: boolean;\n    royalty_type: string;\n    onClick(): void;\n};\n\nconst ListingCard: React.FC<props> = (props) => {\n    const { name, price, rooms, bathrooms, image, rented, onClick, royalty_type } = props;\n    return (\n        <div className=\"w-full cursor-pointer\" onClick={onClick}>\n            <div\n                className=\"w-full h-64 mb-2 bg-red-100 flex justify-end items-start p-2\"\n                style={{\n                    backgroundImage: `url(${image})`,\n                    backgroundSize: \"cover\",\n                }}\n            >\n                 \n            </div>\n        </div>\n    );\n};\n\nexport default ListingCard;\n","import getCallParameters from \"./getCallParameters\";\r\nimport toast from \"react-hot-toast\";\r\nimport transitionMessageAlert from \"./transitionMessageAlert\";\r\nimport { decodeZilPayError } from \"./decodeMessage\";\r\n\r\n/* Calls delete_listing transition */\r\n\r\nconst deleteListingTransition = async (\r\n    contract: any,\r\n    web3: any,\r\n    id: string | undefined\r\n) => {\r\n    try {\r\n        const accounts = await web3.eth.getAccounts();\r\n        await contract.methods.burn(id).send({from : accounts[0]}, function (err:any, res:any) {\r\n            if (err) {\r\n              console.log(\"An error occured\", err)\r\n              return\r\n            }\r\n            console.log(res);\r\n            });\r\n\r\n        // transitionMessageAlert(zilPay, callTransition.ID, \"Deleting listing\");\r\n    } catch (error) {\r\n        // toast.error(decodeZilPayError(error));\r\n    }\r\n};\r\n\r\nexport default deleteListingTransition;\r\n","import getCallParameters from \"./getCallParameters\";\r\nimport toast from \"react-hot-toast\";\r\nimport transitionMessageAlert from \"./transitionMessageAlert\";\r\nimport { decodeZilPayError } from \"./decodeMessage\";\r\n\r\n/* Calls update_listing transition */\r\n\r\nconst updateListingTransition = async (\r\n    contract: any,\r\n    web3: any,\r\n    id: string | undefined,\r\n    price: string | undefined,\r\n    image: string | undefined,\r\n) => {\r\n    const convertedPrice = (parseInt(price || \"\") * 10 ** 12).toString();\r\n    try {\r\n       \r\n\r\n        // transitionMessageAlert(zilPay, callTransition.ID, \"Updating listing\");\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n};\r\n\r\nexport default updateListingTransition;\r\n","import getCallParameters from \"./getCallParameters\";\r\nimport toast from \"react-hot-toast\";\r\nimport transitionMessageAlert from \"./transitionMessageAlert\";\r\nimport { decodeZilPayError } from \"./decodeMessage\";\r\n\r\n/* Calls delete_listing transition */\r\n\r\nconst setApproveTransition = async (\r\n    contract: any,\r\n    web3: any,\r\n    id: string,\r\n    buyerAddress: any\r\n) => {\r\n    try {\r\n        const accounts = await web3.eth.getAccounts();\r\n        contract.methods.approve(buyerAddress, id).send({ from: accounts[0] }, function (err: any, res: any) {\r\n            if (err) {\r\n                console.log(\"An error occured\", err)\r\n                return\r\n            }\r\n            console.log(res);\r\n        });\r\n\r\n\r\n\r\n        //transitionMessageAlert(zilPay, callTransition.ID, \"Providing Operator Previleges!\");\r\n    } catch (error) {\r\n        //toast.error(decodeZilPayError(error));\r\n    }\r\n};\r\n\r\nexport default setApproveTransition;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport claimRentTransition from \"../functions/claimRentTransition\";\r\nimport ContextContainer from \"../functions/contextContainer\";\r\nimport deleteListingTransition from \"../functions/deleteListingTransition\";\r\nimport updateListingTransition from \"../functions/updateListingTransition\";\r\nimport setApproveTransition from \"../functions/setApproveTransition\";\r\nimport Button from \"./componentButton\";\r\nimport Input from \"./componentInput\";\r\nimport Modal from \"./componentModal\";\r\nimport { useWeb3React  } from \"@web3-react/core\"\r\nimport { NFTCOSMOS_ABI, NFTCOSMOS_ADDRESS } from \"../config\";\r\nimport Web3 from 'web3'\r\n\r\n/*\r\nManageListingModal Component\r\n\r\nThis component presents a modal that can be used by a host user to manage their listing.\r\nUses Input and Button components.\r\ndeleteListing, updateListing and claimRent functions are called as required.\r\n*/\r\n\r\ntype props = {\r\n    modalListing: any;\r\n    showManageListing: boolean;\r\n    setShowManageListing(visible: boolean): void;\r\n};\r\n\r\nconst ManageListingModal: React.FC<props> = (props) => {\r\n    const { showManageListing, setShowManageListing, modalListing } = props;\r\n    const { id, accumulated_rent } = modalListing;\r\n    \r\n    const [price, setPrice] = useState<string | undefined>(undefined);\r\n    const [image, setImage] = useState<string | undefined>(undefined);\r\n    const [web3, setWeb3] = useState<any | undefined>(undefined);\r\n    const [contract, setContract] = useState<any | undefined>(undefined);\r\n    const [buyerAddress, setBuyerAddress] = useState<string | undefined>(undefined);\r\n    let {\r\n        library,\r\n        active,\r\n        account} = useWeb3React();\r\n       \r\n\r\n        useEffect(() => {\r\n            setPrice(modalListing.price);\r\n            setImage(modalListing.image);\r\n            const web3 = new Web3(library);\r\n            setWeb3(web3);\r\n            let contract = new library.eth.Contract(NFTCOSMOS_ABI as any, NFTCOSMOS_ADDRESS, account); \r\n            setContract(contract);       \r\n        }, [showManageListing]);\r\n        \r\n\r\n\r\n    const updateListing = () => {\r\n        if (\r\n            !id ||\r\n            !price ||\r\n            !image\r\n        )\r\n            return;\r\n        \r\n        updateListingTransition(\r\n            contract,\r\n            web3,\r\n            id,\r\n            price,\r\n            image,\r\n        );\r\n    };\r\n\r\n    const deleteListing = () => {\r\n        deleteListingTransition(contract, web3, id);\r\n        setShowManageListing(false);\r\n    };\r\n\r\n    const setApprover = () => {\r\n        setApproveTransition(contract, web3, id, buyerAddress);\r\n        setShowManageListing(false);\r\n    };\r\n\r\n   \r\n    return (\r\n        <Modal\r\n            title=\"Manage\"\r\n            visible={showManageListing}\r\n            setVisible={setShowManageListing}\r\n            buttonText={\"Update Listing\"}\r\n            onClick={updateListing}\r\n        >\r\n            <>\r\n                <h4 className=\"text-sm font-semibold text-gray-500 tracking-wide uppercase py-4\">\r\n                    Delete Listing\r\n                </h4>\r\n                <Button\r\n                    text={\"Delete Listing\"}\r\n                    onClick={deleteListing}\r\n                    alert\r\n                    padding\r\n                    modal\r\n                />\r\n            </>\r\n            \r\n            <Input\r\n                name=\"Price\"\r\n                unit=\"ETH\"\r\n                value={price}\r\n                type=\"number\"\r\n                setValue={setPrice}\r\n                disabled\r\n            />\r\n            <Input\r\n                name=\"Image URL\"\r\n                value={image}\r\n                type=\"text\"\r\n                setValue={setImage}\r\n                disabled\r\n            />\r\n            <div className=\"flex grid md:grid-rows-1\">\r\n            <h4 className=\"text-sm font-semibold text-gray-500 tracking-wide uppercase py-4\">\r\n                    Auction\r\n                </h4>      \r\n            <div className=\"flex grid md:grid-cols-3 gap-7\">    \r\n            <Button\r\n                    text={\"Setup Auction\"}\r\n                    onClick={deleteListing}\r\n                    auction\r\n                    padding\r\n                    modal\r\n                />\r\n                <Button\r\n                    text={\"Start Auction\"}\r\n                    onClick={deleteListing}\r\n                    auction\r\n                    padding\r\n                    modal\r\n                />\r\n                <Button\r\n                    text={\"End Auction\"}\r\n                    onClick={deleteListing}\r\n                    auction\r\n                    padding\r\n                    modal\r\n                />\r\n            </div>  \r\n            </div>\r\n            <Input\r\n                name=\"Buyer Address\"\r\n                value={buyerAddress}\r\n                type=\"text\"\r\n                setValue={setBuyerAddress}\r\n            />\r\n            <Button\r\n                    text={\"Approve Buyer\"}\r\n                    onClick={setApprover}\r\n                    green = {true}\r\n                    padding\r\n                    modal\r\n                />                  \r\n\r\n\r\n            \r\n        </Modal>\r\n    );\r\n};\r\n\r\nexport default ManageListingModal;\r\n","import React from \"react\";\n\n\ntype props = {\n    image: string,\n    onClick(): void,\n    isActive: boolean,\n};\n\nconst ImageGrid: React.FC<props> = (props) => {\n    const { image, onClick, isActive } = props;\n    return (\n        <div>\n\n            <div className=\"w-full rounded-2xl cursor-pointer\" onClick={onClick}>\n                <div className=\"relative py-3 w-full sm:max-w-xl sm:mx-auto h-64\" >\n                    <div className=\"absolute \"></div>\n                    <div className=\"relative h-64 w-full bg-white shadow-lg \">\n                        <div className=\"px-2 py-1 bg-gray-200 text-gray-600 rounded uppercase text-xs tracking-wide font-semibold\">\n                            {!isActive ? \"Voting Complete!\" : \"Voting In Progress!\"}\n                            <span className=\"text-gray-900 font-light\"></span>\n                        </div>\n                        <img\n                            style={{ 'height': '100%', 'width': '100%', 'objectFit': 'cover' }}\n                            className=\"bg-gray-100\"\n                            src={image}\n                        />\n                    </div>\n                </div>\n            </div>\n\n        </div>\n    );\n};\n\nexport default ImageGrid;\n","import toast from \"react-hot-toast\";\n\nconst startPollTransition = async (\n    contract: any,\n    account: any,\n    web3: any,\n    ids: any[],\n    addresses : any[],\n    images: any[]\n) => {\n    try {\n        const accounts = await web3.eth.getAccounts();\n        contract.methods.createNewPoll(15, ids, addresses, images)\n        .send({from : accounts[0]}) \n        .on('transactionHash', function(hash:any){\n            toast.success(\"Request Submitted Successfully!\");\n        })\n        .on('error', toast.error)\n        .then(function(value:any){\n            toast.success(\"Polling Started Successfully!\");      \n            window.location.href = \"/listings\";\n        });\n        \n    } catch (error:any) {\n        toast.error(error.message);\n    }\n};\n\nexport default startPollTransition;\n","import React, { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router\";\nimport ContextContainer from \"../functions/contextContainer\";\nimport formatListings from \"../functions/formatListings\";\nimport getCurrentEpochNumber from \"../functions/getCurrentEpochNumber\";\nimport getCurrentUser from \"../functions/getCurretUser\";\nimport Button from \"./componentButton\";\nimport CreateListingModal from \"./componentCreateListingModal\";\nimport ListingCard from \"./componentListingCard\";\nimport ManageListingModal from \"./componentManageListingModal\";\nimport ImageGrid from \"./componentImageGrid\";\nimport { useWeb3React  } from \"@web3-react/core\"\nimport { NFTCOSMOS_ABI, NFTCOSMOS_ADDRESS, NFTPOLLFACTORY_ABI, NFTPOLLFACTORY_ADDRESS } from \"../config\";\nimport { NFTPOLL_ABI } from \"../config\";\nimport startPollTransition from '../functions/startPollTransition';\nimport Web3 from 'web3'\n\n\n\nconst Listings: React.FC = (props) => {\n    const [showCreateListing, setShowCreateListing] = useState<boolean>(false);\n    const [showManageListing, setShowManageListing] = useState<boolean>(false);\n    const [modalListing, setModalListing] = useState<any | undefined>(\n        undefined\n    );\n    const [listings, setListings] = useState<any | undefined>(undefined);\n    const history = useHistory();\n    const {contract} = ContextContainer.useContainer();\n    let {\n    library,\n    active,\n    account} = useWeb3React();\n\n    //polled tokens\n    const polls = listings?.filter((listing: any) => {\n        return !listing.isPoll;\n    });\n\n    //your tokens\n    const nonPolls = listings?.filter((listing: any) => {\n        return listing.isPoll;\n    });\n\n    const startPoll = () => {\n        if(!active) return;\n        const web3 = new Web3(library);\n        let contract = new library.eth.Contract(NFTPOLLFACTORY_ABI as any, NFTPOLLFACTORY_ADDRESS, account);\n        const ids = listings.filter((element:any) => !element.isPoll).map((element:any) => element.id);\n        const addresses = listings.filter((element:any) => !element.isPoll).map(() => NFTCOSMOS_ADDRESS);\n        const images = listings.filter((element:any) => !element.isPoll).map((element:any) => element.image);\n        startPollTransition(contract, account, web3, ids, addresses, images);\n    }\n\n\n    useEffect(() => { \n        if(!active) return;\n        const web3 = new Web3(library);\n        let skyScraperContract = new library.eth.Contract(NFTCOSMOS_ABI as any, NFTCOSMOS_ADDRESS, account);\n        let pollFactoryContract = new library.eth.Contract(NFTPOLLFACTORY_ABI as any, NFTPOLLFACTORY_ADDRESS, account);\n        formatListings(skyScraperContract,pollFactoryContract,  account, web3, NFTPOLL_ABI, library).then((value) => {setListings(value); console.log(value)});\n        console.log(\"set\");\n        console.log(\"set\");\n    },[active, account]);\n\n    return (\n        <div className=\"container mx-auto px-4 lg:px-2 pb-10\">\n            <div className=\"pt-10 pb-5 flex justify-between items-center\">\n            </div>\n            {nonPolls ? (\n                <>\n                    {/* {nonHostedListings.length > 0 ? (\n                            <div className=\"grid md:grid-cols-4 gap-7\">\n                                {nonHostedListings.map((listing: any, index: number) => {\n                                    return (\n                                        <ListingCard\n                                            {...listing}\n                                            onClick={() => {\n                                                history.push(\n                                                    `/listing/${listing.id}`\n                                                );\n                                            }}\n                                        />\n                                    );\n                                })}\n                            </div>\n                    ) : (\n                        <p className=\"text-xl text-center text-red-600\">No listings</p>\n                    )} */}\n\n\n<div className=\"pt-16 pb-5 flex justify-between items-center\">\n                        <h1 className=\"text-red-600 text-2xl font-medium\">\n                            Polled Listing\n                        </h1>\n                    </div>\n                    {nonPolls.length > 0 ? (\n                        <div className=\"grid md:grid-cols-5 gap-8 \">\n                            {nonPolls.map(\n                                (listing: any, index: number) => {\n                                    return (\n                                        <ImageGrid\n                                            {...listing}\n                                            onClick={() => {\n                                                history.push(\n                                                    `/poll/${listing.id}/${listing.isActive}`\n                                                );\n                                            }}\n                                        />\n                                    );\n                                }\n                            )}\n                        </div>\n                    ) : (\n                        <p className=\"text-xl text-center text-red-600\">\n                            No listings\n                        </p>\n                    )}\n\n                    <div className=\"pt-16 pb-5 flex justify-between items-center\">\n                        <h1 className=\"text-red-600 text-2xl font-medium\">\n                            Your Tokens\n                        </h1>\n                        <div className=\"flex items-center space-between\">\n                            <Button\n                                text={\"Create a token\"}\n                                onClick={() => setShowCreateListing(true)}\n                            />\n                            <div className=\"px-5\" ></div>\n                            <Button\n                                text={\"Start Poll\"}\n                                onClick={startPoll}\n                            />\n                        </div>\n                    </div>\n                    {polls.length > 0 ? (\n                        <div className=\"grid md:grid-cols-5 gap-6\">\n                            {polls.map(\n                                (listing: any, index: number) => {\n                                    return (\n                                        <ListingCard\n                                            {...listing}\n                                            onClick={() => {\n                                                setModalListing(\n                                                    listing\n                                                );\n                                                setShowManageListing(\n                                                    false\n                                                );\n                                            }}\n                                        />\n                                    );\n                                }\n                            )}\n                        </div>\n                    ) : (\n                        <p className=\"text-xl text-center text-red-600\">\n                            No listings\n                        </p>\n                    )}\n\n\n\n\n\n                </>\n            ) : false ? (\n                <p className=\"text-xl text-center\">Loading</p>\n            ) : (\n                <p className=\"text-xl text-center text-red-600\">Connect wallet to proceed</p>\n            )}\n           <CreateListingModal\n                {...{ showCreateListing, setShowCreateListing }}\n            />\n             {modalListing && (\n                <ManageListingModal\n                    {...{\n                        modalListing,\n                        showManageListing,\n                        setShowManageListing,\n                    }}\n                />\n            )}\n        </div>\n    );\n};\n\nexport default Listings;\n","import toast from \"react-hot-toast\";\nconst voteTransition = async (\n    pollImagesContract: any,\n    account: any,\n    web3: any,\n    address: string,\n    id: any\n) => {\n    const accounts = await web3.eth.getAccounts();\n    await pollImagesContract.methods.vote(address, id).send({ from: accounts[0] }, function (err: any, res: any) {\n        if (err) {\n            toast.error(err.message);\n            return\n        }\n        toast.success(res);\n        \n    })\n\n}\n\nexport default voteTransition;\n","import React, { useEffect, useState } from \"react\";\nimport Button from \"./componentButton\";\nimport { useParams } from \"react-router-dom\";\nimport { useWeb3React } from \"@web3-react/core\"\nimport { NFTPOLL_ABI } from \"../config\";\nimport Web3 from 'web3';\nimport voteTransition from \"../functions/voteTransition\";\n\ntype props = {\n    image: string;\n    id: number;\n    tokenAddress: string;\n    contractAddress: string;\n    voteCount: any;\n    isActive: any;\n};\n\nconst PollCard: React.FC<props> = (props) => {\n    const { image, id , tokenAddress, contractAddress, voteCount, isActive} = props;\n    const [buyerAddress, setBuyerAddress] = useState<string>(\"\");\n    const [pollResponse, setPollResponse] = useState<string>(\"\");\n    let {\n        library,\n        active,\n        account} = useWeb3React();\n\n    const applyVote = () => {\n        if(!active) return;\n        const web3 = new Web3(library);\n        let contract = new library.eth.Contract(NFTPOLL_ABI as any, contractAddress, account);\n        voteTransition(contract, account, web3, tokenAddress, id);\n    }\n    return ( <div className=\"container bg-gray-100 mx-auto px-4 lg:px-2 pb-20\">\n        <div className=\"pt-5 pb-10\">\n        </div>\n        <div className=\"grid lg:grid-cols-3 gap-12 relative\">\n            <div className=\"order-2 lg:order-none lg:col-span-2\">\n                <img\n                    className=\"rounded-xl bg-gray-100\"\n                    src={image}\n                />\n            </div>\n\n            <div className=\"order-1\">\n                <div className=\"top-32 p-6  w-full\">\n                {(tokenAddress && !isActive)  ? <Button\n                        modal\n                        onClick={applyVote}\n                        text=\"Vote!\"\n                    /> : <h1 className=\"text-gray-900 text-3xl font-medium\">\n                         Votes : {voteCount}\n                    </h1>}\n                </div>\n            </div>\n        </div>\n    </div>\n\n\n    );\n};\n\nexport default PollCard;\n","\nconst pollImagesTransition = async (\n    pollImagesContract: any,\n    account: any,\n    web3: any\n) => {\n    let contractResponse = new Array();\n    const accounts = await web3.eth.getAccounts();\n    await pollImagesContract.methods.getAllItemsInPoll().call({ from: accounts[0] }, function (err: any, res: any) {\n        if (err) {\n            console.log(\"An error occured\", err)\n            return\n        }\n        res.forEach((element: any) => {\n                contractResponse.push({\n                    id: element.tokenId,\n                    image: element.uri,\n                    tokenAddress: element.nftAddr,\n                })\n        });\n    })\n\n    return contractResponse;\n\n}\n\nexport default pollImagesTransition;\n","import toast from \"react-hot-toast\";\n\nconst endPollingTransition = async (\n    contract: any,\n    account: any,\n    web3: any,\n    methodCallback: any,\n) => {\n    try {\n        const accounts = await web3.eth.getAccounts();\n        contract.methods.endPolling().send({from : accounts[0]})\n        .on('transactionHash', function(hash:any){\n            toast.success(\"Request Submitted Successfully!\");\n        })\n        .on('error', toast.error)\n        .then(function(value:any){\n            toast.success(\"Polling Completed Successfully!\");\n            let contractResponse:any = [];\n            value.events.Winners.returnValues.winners.forEach((element:any)  => {\n                contractResponse.push({\n                        id: element.tokenId,\n                        image: element.uri,\n                        voteCount: element.voteCount,\n                });\n            });    \n            methodCallback(contractResponse);       \n        });\n    } catch (error:any) {\n        toast.error(error.message);\n    }\n};\n\nexport default endPollingTransition;\n","import toast from \"react-hot-toast\";\n\nconst getWinnersTransition = async (\n    contract: any,\n    account: any,\n    web3: any,\n    methodCallback: any,\n) => {\n    try {\n        const accounts = await web3.eth.getAccounts();\n        await contract.methods.pollWinners().call({from : accounts[0]})                       \n        .then(function(value:any){\n            let contractResponse:any = [];\n            value.forEach((element:any)  => {\n                contractResponse.push({\n                        id: element.tokenId,\n                        image: element.uri,\n                        voteCount: element.voteCount,\n                });\n            });    \n            methodCallback(contractResponse);       \n        });\n    } catch (error:any) {\n        toast.error(error.message);\n    }\n};\n\nexport default getWinnersTransition;\n","import React, { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router\";\nimport ContextContainer from \"../functions/contextContainer\";\nimport formatListings from \"../functions/formatListings\";\nimport getCurrentEpochNumber from \"../functions/getCurrentEpochNumber\";\nimport getCurrentUser from \"../functions/getCurretUser\";\nimport Button from \"./componentButton\";\nimport CreateListingModal from \"./componentCreateListingModal\";\nimport ListingCard from \"./componentListingCard\";\nimport ManageListingModal from \"./componentManageListingModal\";\nimport PollCard from \"./componentPollCard\";\nimport { NFTPOLL_ABI } from \"../config\";\nimport Web3 from 'web3';\nimport pollImagesTransition from \"../functions/pollImagesTransition\";\nimport endPollingTransition from \"../functions/endPollingTransition\";\nimport getWinnersTransition from '../functions/getWinnersTransition';\nimport { useWeb3React } from \"@web3-react/core\"\nimport { useParams } from \"react-router-dom\";\n\n\nconst Poll: React.FC = () => {\n    const [showCreateListing, setShowCreateListing] = useState<boolean>(false);\n    const [showManageListing, setShowManageListing] = useState<boolean>(false);\n    const [modalListing, setModalListing] = useState<any | undefined>(\n        undefined\n    );\n    const [listings, setListings] = useState<any | undefined>(undefined);\n    const [count, setCount] = useState<any | undefined>(0);\n    let {\n        library,\n        active,\n        account } = useWeb3React();\n    const { id , isActive} = useParams<{ id: string , isActive: string}>();\n\n\n    useEffect(() => {\n        if (!active) return;\n        (async () => {\n            const web3Ref = new Web3(library);\n            let contract = new library.eth.Contract(NFTPOLL_ABI as any, id, account);\n            if(isActive === \"true\"){\n                pollImagesTransition(contract, account, web3Ref).then(value => setListings(value));\n            }else{\n                getWinnersTransition(contract, account, web3Ref, responseCallBack);\n            }\n\n        })();\n    }, [active]);\n\n    const responseCallBack = (response: any) => {\n        setListings(response);\n\n    }\n\n    const endPolling = () => {\n        if (!active) return;\n        const web3 = new Web3(library);\n        let contract = new library.eth.Contract(NFTPOLL_ABI as any, id, account);\n        endPollingTransition(contract, account, web3, responseCallBack);\n    }\n\n\n\n    return (\n        <div className=\"container mx-auto px-4 lg:px-2 pb-10\">\n\n            {listings && listings.length > 0 ? (\n                <>\n                    <div className=\"pt-10 pb-5 flex justify-between items-center\">\n                        <h1 className=\"text-gray-900 text-2xl font-medium\">Poll</h1>\n                    </div>\n                    <div className=\"grid md:grid-cols-1 gap-10\">\n                        {listings.map((listing: any, index: number) => {\n                            return (\n                                <PollCard\n                                    {...listing}\n                                    contractAddress={id}\n                                />\n                            );\n                        })}\n                    </div>\n                    {isActive == \"true\" ?\n                    (<div className=\"order-1\">\n                        <div className=\"top-32 p-6 w-full\">\n                            <Button\n                                modal\n                                onClick={endPolling}\n                                text=\"End Polling!\"\n                            />\n                        </div>\n                    </div>)\n                    :\n                    <div></div>}\n                </>\n            ) : (\n                <p className=\"text-xl text-center\">No listings</p>\n            )}\n\n\n        </div>\n    );\n};\n\nexport default Poll;\n","import React, { useEffect, useState } from \"react\";\nimport Header from \"./components/componentHeader\";\nimport Listing from \"./components/componentListing\";\nimport Listings from \"./components/componentListings\";\nimport SignUpModal from \"./components/componentCreateAccountModal\";\nimport ContextContainer from \"./functions/contextContainer\";\nimport { Toaster } from \"react-hot-toast\";\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Redirect,\n} from \"react-router-dom\";\nimport { Web3ReactProvider } from '@web3-react/core'\nimport Web3 from 'web3'\nimport Poll from './components/componentPoll';\nimport { useWeb3React,  } from \"@web3-react/core\";\nimport detectEthereumProvider from '@metamask/detect-provider'\nimport { InjectedConnector } from '@web3-react/injected-connector'\ndeclare let window: any;\n\n\n\nconst App: React.FC = () => {\n    const { setContract } = ContextContainer.useContainer();\n    let {\n        library,\n        active,\n        account,\n        activate} = useWeb3React();\n\n    useEffect(() => {\n        if (window.ethereum) {\n            activate(new InjectedConnector({\n                supportedChainIds: [3],\n              }));\n         }\n    },[]);\n\n\n    return (\n            <div className=\"rentonzilliqa\">\n                <Header />\n                <div><Router>\n                    <main>\n                        <Switch>\n                            <Route path=\"/\" exact>\n                                <Redirect to={\"/listings\"} />\n                            </Route>\n                            <Route path=\"/listings\">\n                                <Listings />\n                            </Route>\n                            <Route path=\"/listing/:id\">\n                                <Listing />\n                            </Route>\n                            <Route path=\"/poll/:id/:isActive\">\n                                <Poll />\n                            </Route>\n                            <Redirect to={\"/listings\"} />\n                        </Switch>\n                    </main>\n                </Router>\n                <Toaster\n                    toastOptions={{\n                        success: { duration: 6000 },\n                        error: { duration: 8000 },\n                        loading: { duration: 130000 },\n                    }}\n                />\n                </div>\n            </div>\n    );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport \"./tailwind.output.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport ContextContainer from \"./functions/contextContainer\";\nimport { Web3ReactProvider } from '@web3-react/core';\nimport Web3 from 'web3';\n\nfunction getLibrary(provider: any) {\n    let webProvider = new Web3(provider);\n    return webProvider;\n}\n\nReactDOM.render(\n    <React.StrictMode>\n        <Web3ReactProvider getLibrary={getLibrary}>\n            <ContextContainer.Provider>\n                <App />\n            </ContextContainer.Provider>\n        </Web3ReactProvider>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}